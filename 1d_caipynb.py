# -*- coding: utf-8 -*-
"""1d_CAipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zbQsAbCf2X6dQtx57gtvU8Kzt2-OTlIh
"""

import numpy as np
import matplotlib.pyplot as plt

# === ΧΡΗΣΤΗΣ ΟΡΙΖΕΙ ===
num_states = int(input("Αριθμός καταστάσεων (π.χ. 2): "))
grid_size = int(input("Μέγεθος πλέγματος (π.χ. 50): "))
generations = int(input("Αριθμός γενιών (π.χ. 50): "))
rule_base = int(input("Εισάγετε τον κανόνα (σε δεκαδική μορφή π.χ. 30, 110): "))

# === ΥΠΟΛΟΓΙΣΜΟΣ RULETABLE ===
def generate_rule_table(rule_number, states, radius=1):
    num_neigh = (2 * radius + 1)  # Ο αριθμός των γειτόνων που επηρεάζουν την κυψέλη
    total_configs = states ** num_neigh  # Ο συνολικός αριθμός συνδυασμών
    rule_bin = np.base_repr(rule_number, base=states).zfill(total_configs)  # Ο κανόνας σε δυαδική μορφή
    rule_table = {i: int(rule_bin[::-1][i]) for i in range(total_configs)}  # Δημιουργία πίνακα κανόνων
    return rule_table

# === ΑΡΧΙΚΟΠΟΙΗΣΗ ===
def initialize_grid(size):
    grid = np.zeros(size, dtype=int)
    grid[size // 2] = 1  # Μοναδική ενεργή κυψελίδα στη μέση
    return grid

# === ΕΞΕΛΙΞΗ 1D ΚΑ ===
def evolve_1d(grid, rule_table, states, radius=1):
    size = len(grid)
    new_grid = np.zeros_like(grid)
    for i in range(size):
        neighborhood = []
        # Δημιουργία της γειτονιάς (γύρω από την κυψέλη)
        for j in range(i - radius, i + radius + 1):
            idx = j % size
            neighborhood.append(grid[idx])
        key = 0
        # Υπολογισμός του κλειδιού για τον πίνακα κανόνων
        for k, val in enumerate(neighborhood):
            key += val * (states ** (len(neighborhood) - k - 1))
        new_grid[i] = rule_table[key]
    return new_grid

# === ΕΚΤΕΛΕΣΗ ===
rule_number = int(rule_base)
rule_table = generate_rule_table(rule_number, num_states)
current_grid = initialize_grid(grid_size)

history = [current_grid.copy()]
for _ in range(generations - 1):
    current_grid = evolve_1d(current_grid, rule_table, num_states)
    history.append(current_grid.copy())

# === ΟΠΤΙΚΟΠΟΙΗΣΗ ===
plt.imshow(history, cmap='viridis', interpolation='nearest')
plt.title(f"Programmable 1D CA - Rule {rule_number} - {num_states} states")
plt.xlabel("Κυψελίδες")
plt.ylabel("Γενιές")
plt.colorbar(label="Κατάσταση")
plt.show()

